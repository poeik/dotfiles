#!/usr/bin/env sh

yabai -m signal --add event=dock_did_restart action="sudo yabai --load-sa"

sudo yabai --load-sa

# global settings
yabai -m config mouse_follows_focus          off
yabai -m config focus_follows_mouse          off
yabai -m config window_origin_display        default
yabai -m config window_placement             second_child
yabai -m config window_topmost               off
yabai -m config window_shadow                on
yabai -m config window_opacity               off
yabai -m config window_opacity_duration      0.0
yabai -m config active_window_opacity        1.0
yabai -m config normal_window_opacity        0.90
yabai -m config window_border                off
yabai -m config active_window_border_color   0xffffffff
yabai -m config window_border_width          2
yabai -m config normal_window_border_color   0xff555555
yabai -m config insert_feedback_color        0xffd75f5f
yabai -m config split_ratio                  0.50
yabai -m config auto_balance                 off
yabai -m config mouse_modifier               fn
yabai -m config mouse_action1                move
yabai -m config mouse_action2                resize
yabai -m config mouse_drop_action            swap

# general space settings
yabai -m config layout                       bsp
yabai -m config top_padding                  6
yabai -m config bottom_padding               6
yabai -m config left_padding                 6
yabai -m config right_padding                6
yabai -m config window_gap                   6

# apps to not manage (ignore)
yabai -m rule --add app="^System Settings$" manage=off
yabai -m rule --add app="^Toggl Track$" manage=off
yabai -m rule --add app="^PrinterProxy$" manage=off # printer window
yabai -m rule --add app="^Bitwarden$" manage=off
yabai -m rule --add app="Toolbox$" manage=off
yabai -m rule --add app="^Logi Options$" manage=off
yabai -m rule --add app="^Finder$" title="^Connect to Server$" manage=off
yabai -m rule --add app="^Cisco AnyConnect Secure Mobility Client$" manage=off
yabai -m rule --add app="^Microsoft Teams"  manage=off
yabai -m rule --add title="^Copy$" manage=off # copy window of jetbrains idea
yabai -m rule --add title="^Move$" manage=off # move window of jetbrains idea
yabai -m rule --add title="^Delete$" manage=off # delete window of jetbrains idea
yabai -m rule --add title="^Rename$" manage=off # rename window of jetbrains idea
yabai -m rule --add title="^Welcome to" manage=off # start  window of jetbrains idea
yabai -m rule --add title="^Evaluate$" manage=off # Evaluate window of jetbrains ides
yabai -m rule --add title="^Settings$" manage=off # start  window of jetbrains idea
yabai -m rule --add title="^Add File to Git$" manage=off # start  window of jetbrains idea
yabai -m rule --add app="^Todoist$" title="^Todoist$" manage=off # Todoist add new task window


# react to signals
yabai -m signal --add event=display_added action="zsh ~/.scripts/bin/rearrange-spaces.sh"
yabai -m signal --add event=display_removed action="zsh ~/.scripts/bin/rearrange-spaces.sh"

# ensure a selected window, when another window has been closed
yabai -m signal --add event=window_destroyed action="~/.scripts/bin/focus-window-if-none-focused.sh"

# ## focus window after active space changes
# yabai -m signal --add event=space_changed action="yabai -m window --focus \$(yabai -m query --windows --space | jq .[0].id)"

# ## focus window after active display changes
# yabai -m signal --add event=display_changed action="yabai -m window --focus \$(yabai -m query --windows --space | jq .[0].id)"

echo "yabai configuration loaded.."
